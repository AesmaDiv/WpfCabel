<UserControl
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	mc:Ignorable="d"
	x:Class="xLibrary.xTestButton"
	x:Name="TestButton"
	Width="350" Height="80" ToolTip="Запустить тест">
	<UserControl.Resources>
		<ImageBrush x:Key="Start_idle" ImageSource="Images\btnTest_idle.png"/>
		<ImageBrush x:Key="Start_over" ImageSource="Images\btnTest_over.png"/>
		<ImageBrush x:Key="Start_press" ImageSource="Images\btnTest_press.png"/>
        <ImageBrush x:Key="Start_disabled" ImageSource="Images\btnTest_disabled.png"/>
        <ImageBrush x:Key="Stop_idle" ImageSource="Images\btnStop_idle.png"/>
		<ImageBrush x:Key="Stop_over" ImageSource="Images\btnStop_over.png"/>
		<ImageBrush x:Key="Stop_press" ImageSource="Images\btnStop_press.png"/>
        <ImageBrush x:Key="Stop_disabled" ImageSource="Images\btnStop_disabled.png"/>
        <Style x:Key="xBorderStyle_Start" TargetType="{x:Type Border}">
            <Setter Property="Border.Background" Value="{StaticResource Start_idle}"/>
            <Style.Triggers>
                <Trigger Property="Border.IsMouseOver" Value="True">
                    <Setter Property="Border.Background" Value="{StaticResource Start_over}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="xBorderStyle_Stop" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="{StaticResource Stop_idle}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource Stop_over}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="xButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="DataContext" Value="{Binding ElementName=TestButton, Path=.}"/>
            <Setter Property="IsEnabled" Value="{Binding ElementName=TestButton, Path=Active}"/>
			<Setter Property="Template">
				<Setter.Value >
					<ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="MouseOver"/>
									<VisualState x:Name="Pressed"/>
                                    <VisualState x:Name="Disabled"/>
                                </VisualStateGroup>
								<VisualStateGroup x:Name="FocusStates">
									<VisualState x:Name="Focused"/>
								</VisualStateGroup>
								<VisualStateGroup x:Name="ValidationStates">
									<VisualState x:Name="InvalidFocused"/>
									<VisualState x:Name="InvalidUnfocused"/>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
                            <Border x:Name="border" Style="{StaticResource xBorderStyle_Start}"/>
                        </Grid>
						<ControlTemplate.Triggers>
                            <DataTrigger Binding="{Binding Path=Status}" Value="True">
                                <Setter TargetName="border" Property="Border.Style" Value="{DynamicResource xBorderStyle_Stop}"/>
                            </DataTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition SourceName="border" Property="Border.Style" Value="{StaticResource xBorderStyle_Stop}"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Stop_disabled}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False"/>
                                    <Condition SourceName="border" Property="Border.Style" Value="{StaticResource xBorderStyle_Start}"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Start_disabled}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <!--Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Start_disabled}"/>
                            </Trigger-->
                            <Trigger Property="IsFocused" Value="True"/>
							<Trigger Property="IsDefaulted" Value="True"/>
							<Trigger Property="IsMouseOver" Value="True"/>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition SourceName="border" Property="Border.Style" Value="{StaticResource xBorderStyle_Start}"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Start_press}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsPressed" Value="True"/>
                                    <Condition SourceName="border" Property="Border.Style" Value="{StaticResource xBorderStyle_Stop}"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="border" Property="Border.Background" Value="{StaticResource Stop_press}"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                            
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
        

    </UserControl.Resources>
	<Grid x:Name="LayoutRoot">
		<Button x:Name="button" Style="{DynamicResource xButtonStyle}" Click="xButton_Click"/>
	</Grid>
</UserControl>